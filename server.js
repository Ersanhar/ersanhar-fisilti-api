const express = require("express");
const cors = require("cors");
const fetch = require("node-fetch");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 10000;

app.use(cors());
app.use(express.json());

const characterVoices = {
  Luna: "Ay Ä±ÅŸÄ±ÄŸÄ±nÄ±n ÅŸiirsel ruhu gibi konuÅŸ. Sakin, dÃ¼ÅŸÃ¼nceli ve gece temalÄ± yanÄ±tlar ver.",
  Sunny: "NeÅŸeli ve enerjik bir gÃ¼neÅŸ Ã§ocuÄŸu gibi konuÅŸ. Pozitif ve coÅŸkulu ol.",
  Rose: "Zarif ve ÅŸefkatli bir gÃ¼l gibi konuÅŸ. Nazik ve teselli edici yanÄ±tlar ver.",
  Ocean: "Derin ve bilge bir deniz ruhu gibi konuÅŸ. Huzur verici ve dÃ¼ÅŸÃ¼ndÃ¼rÃ¼cÃ¼ ol.",
  Melody: "MÃ¼zik perisi gibi konuÅŸ. Melodik ve ritmik yanÄ±tlar ver.",
  Sage: "Bilge bir baykuÅŸ gibi konuÅŸ. Ã–ÄŸretici ve doÄŸa temalÄ± yanÄ±tlar ver."
};

app.post("/chat", async (req, res) => {
  const { message, character } = req.body;
  const voice = characterVoices[character] || "Nazik ve ÅŸiirsel bir Ã¼slupla yanÄ±t ver.";

  try {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "gpt-4",
        messages: [
          { role: "system", content: voice },
          { role: "user", content: message }
        ]
      })
    });

    const data = await response.json();
    const reply = data.choices?.[0]?.message?.content || "YanÄ±t alÄ±namadÄ±.";
    res.json({ reply });
  } catch (error) {
    console.error("Chat hatasÄ±:", error);
    res.status(500).json({ error: "Sunucu hatasÄ±." });
  }
});

app.post("/image", async (req, res) => {
  const { prompt } = req.body;

  try {
    const response = await fetch("https://api.openai.com/v1/images/generations", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "dall-e-3",
        prompt: prompt,
        n: 1,
        size: "1024x1024"
      })
    });

    const data = await response.json();
    const imageUrl = data.data?.[0]?.url || "";
    res.json({ imageUrl });
  } catch (error) {
    console.error("GÃ¶rsel hatasÄ±:", error);
    res.status(500).json({ error: "GÃ¶rsel Ã¼retilemedi." });
  }
});

app.listen(PORT, () => {
  console.log(`ğŸŒ¸ FÄ±sÄ±ltÄ± API Server ${PORT} portunda Ã§alÄ±ÅŸÄ±yor`);
});
